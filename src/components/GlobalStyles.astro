---

---

<div>
    <slot/>
</div>

<style is:global lang="stylus">

/* utils */
white(a)
  rgba(255, 255, 255, a)

black(a)
  rgba(0, 0, 0, a)

isOklch(c)
  return substr(c, 0, 5) == 'oklch'

oklch_fallback(c)
  str = '' + c    // convert color value to string
  if isOklch(str)
    return convert(oklchToHex(str))
  return c

color_set(colors)
  @supports (color: oklch(0 0 0))
    :root
      for key, value in colors
        {key}: value[0]
    :root.dark
      for key, value in colors
        if length(value) > 1
          {key}: value[1]
  /* provide fallback color for oklch */
  @supports not (color: oklch(0 0 0))
    :root
      for key, value in colors
        {key}: oklch_fallback(value[0])
    :root.dark
      for key, value in colors
        if length(value) > 1
          {key}: oklch_fallback(value[1])

rainbow-light = linear-gradient(to right, oklch(0.80 0.10 0), oklch(0.80 0.10 30), oklch(0.80 0.10 60), oklch(0.80 0.10 90), oklch(0.80 0.10 120), oklch(0.80 0.10 150), oklch(0.80 0.10 180), oklch(0.80 0.10 210), oklch(0.80 0.10 240), oklch(0.80 0.10 270), oklch(0.80 0.10 300), oklch(0.80 0.10 330), oklch(0.80 0.10 360))
rainbow-dark = linear-gradient(to right, oklch(0.70 0.10 0), oklch(0.70 0.10 30), oklch(0.70 0.10 60), oklch(0.70 0.10 90), oklch(0.70 0.10 120), oklch(0.70 0.10 150), oklch(0.70 0.10 180), oklch(0.70 0.10 210), oklch(0.70 0.10 240), oklch(0.70 0.10 270), oklch(0.70 0.10 300), oklch(0.70 0.10 330), oklch(0.70 0.10 360))

:root
  --radius-large 1rem

  --banner-height-home 60vh
  --banner-height 40vh

  --content-delay 150ms

color_set({
  --primary: oklch(0.70 0.14 var(--hue)) oklch(0.75 0.14 var(--hue))
  --page-bg: oklch(0.95 0.01 var(--hue)) oklch(0.16 0.014 var(--hue))
  --card-bg: white oklch(0.23 0.015 var(--hue))

  --btn-content: oklch(0.55 0.12 var(--hue)) oklch(0.75 0.1 var(--hue))

  --btn-regular-bg: oklch(0.95 0.025 var(--hue)) oklch(0.33 0.035 var(--hue))
  --btn-regular-bg-hover: oklch(0.9 0.05 var(--hue)) oklch(0.38 0.04 var(--hue))
  --btn-regular-bg-active: oklch(0.85 0.08 var(--hue)) oklch(0.43 0.045 var(--hue))

  --btn-plain-bg-hover: oklch(0.95 0.025 var(--hue)) oklch(0.30 0.035 var(--hue))
  --btn-plain-bg-active: oklch(0.98 0.01 var(--hue)) oklch(0.27 0.025 var(--hue))

  --btn-card-bg-hover: oklch(0.98 0.005 var(--hue)) oklch(0.3 0.03 var(--hue))
  --btn-card-bg-active: oklch(0.9 0.03 var(--hue)) oklch(0.35 0.035 var(--hue))

  --enter-btn-bg: var(--btn-regular-bg)
  --enter-btn-bg-hover: var(--btn-regular-bg-hover)
  --enter-btn-bg-active: var(--btn-regular-bg-active)

  --deep-text: oklch(0.25 0.02 var(--hue))

  --title-active: oklch(0.6 0.1 var(--hue))

  --line-divider: black(0.08) white(0.08)

  --line-color: black(0.1) white(0.1)
  --meta-divider: black(0.2) white(0.2)

  --inline-code-bg: var(--btn-regular-bg)
  --inline-code-color: var(--btn-content)
  --selection-bg: oklch(0.90 0.05 var(--hue)) oklch(0.40 0.08 var(--hue))
  --codeblock-selection: oklch(0.40 0.08 var(--hue))
  --codeblock-bg: oklch(0.2 0.015 var(--hue)) oklch(0.17 0.015 var(--hue))

  --license-block-bg: black(0.03) var(--codeblock-bg)

  --link-underline: oklch(0.93 0.04 var(--hue)) oklch(0.40 0.08 var(--hue))
  --link-hover: oklch(0.95 0.025 var(--hue)) oklch(0.40 0.08 var(--hue))
  --link-active: oklch(0.90 0.05 var(--hue)) oklch(0.35 0.07 var(--hue))

  --float-panel-bg: white oklch(0.19 0.015 var(--hue))

  --scrollbar-bg-light: black(0.4)
  --scrollbar-bg-hover-light: black(0.5)
  --scrollbar-bg-active-light: black(0.6)

  --scrollbar-bg-dark: white(0.4)
  --scrollbar-bg-hover-dark: white(0.5)
  --scrollbar-bg-active-dark: white(0.6)

  --scrollbar-bg: var(--scrollbar-bg-light) var(--scrollbar-bg-dark)
  --scrollbar-bg-hover: var(--scrollbar-bg-hover-light) var(--scrollbar-bg-hover-dark)
  --scrollbar-bg-active: var(--scrollbar-bg-active-light) var(--scrollbar-bg-active-dark)

  --color-selection-bar: rainbow-light rainbow-dark

  --display-light-icon: 1 0
  --display-dark-icon: 0 1

  --admonitions-color-tip: oklch(0.7 0.14 180) oklch(0.75 0.14 180)
  --admonitions-color-note: oklch(0.7 0.14 250) oklch(0.75 0.14 250)
  --admonitions-color-important: oklch(0.7 0.14 310) oklch(0.75 0.14 310)
  --admonitions-color-warning: oklch(0.7 0.14 60) oklch(0.75 0.14 60)
  --admonitions-color-caution: oklch(0.6 0.2 25) oklch(0.65 0.2 25)
})


/* some global styles */
::selection
  background-color: var(--selection-bg)

.scrollbar-base.os-scrollbar
  transition: width 0.15s ease-in-out, height 0.15s ease-in-out, opacity 0.15s, visibility 0.15s, top 0.15s, right 0.15s, bottom 0.15s, left 0.15s;
  pointer-events: unset;
  &.os-scrollbar-horizontal
    padding-top: 4px;
    padding-bottom: 4px;
    height: 16px;
    .os-scrollbar-track .os-scrollbar-handle
      height: 4px;
      border-radius: 4px;
    &:hover
      .os-scrollbar-track .os-scrollbar-handle
        height: 8px;
    &.px-2
      padding-left: 8px;
      padding-right: 8px;
  &.os-scrollbar-vertical
    padding-left: 4px;
    padding-right: 4px;
    width: 16px;
    .os-scrollbar-track .os-scrollbar-handle
      width: 4px;
      border-radius: 4px;
    &:hover
      .os-scrollbar-track .os-scrollbar-handle
        width: 8px;
    &.py-1
      padding-top: 4px;
      padding-bottom: 4px;

.scrollbar-auto
  &.os-scrollbar
    --os-handle-bg: var(--scrollbar-bg);
    --os-handle-bg-hover: var(--scrollbar-bg-hover);
    --os-handle-bg-active: var(--scrollbar-bg-active);

.scrollbar-dark
  &.os-scrollbar
    --os-handle-bg: var(--scrollbar-bg-dark);
    --os-handle-bg-hover: var(--scrollbar-bg-hover-dark);
    --os-handle-bg-active: var(--scrollbar-bg-active-dark);

.scrollbar-light
  &.os-scrollbar
    --os-handle-bg: var(--scrollbar-bg-light);
    --os-handle-bg-hover: var(--scrollbar-bg-hover-light);
    --os-handle-bg-active: var(--scrollbar-bg-active-light);


</style>
<style is:global>
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer components {
    .card-base {
        @apply rounded-[var(--radius-large)] overflow-hidden bg-[var(--card-bg)] transition;
    }
    h1, h2, h3, h4, h5, h6, p, a, span, li, ul, ol, blockquote, code, pre, table, th, td, strong {
        @apply transition;
    }
    .card-shadow {
        @apply drop-shadow-[0_2px_4px_rgba(0,0,0,0.005)]
    }
    .link {
        @apply transition hover:bg-[var(--link-hover)] active:bg-[var(--link-active)] rounded-md p-1 -m-1;
    }
    .link-lg {
        @apply transition hover:bg-[var(--link-hover)] active:bg-[var(--link-active)] rounded-md p-1.5 -m-1.5;
    }
    .float-panel {
        @apply top-[5.25rem] rounded-[var(--radius-large)] overflow-hidden bg-[var(--float-panel-bg)] transition shadow-xl dark:shadow-none
    }
    .float-panel-closed {
        @apply -translate-y-1 opacity-0 pointer-events-none
    }
    .search-panel mark {
        @apply bg-transparent text-[var(--primary)]
    }

    .btn-card {
        @apply transition flex items-center justify-center bg-[var(--card-bg)] hover:bg-[var(--btn-card-bg-hover)]
        active:bg-[var(--btn-card-bg-active)]
    }
    .btn-card.disabled {
        @apply pointer-events-none text-black/10 dark:text-white/10
    }
    .btn-plain {
        @apply transition flex items-center justify-center bg-none hover:bg-[var(--btn-plain-bg-hover)] active:bg-[var(--btn-plain-bg-active)]
        text-black/75 hover:text-[var(--primary)] dark:text-white/75 dark:hover:text-[var(--primary)]
    }
    .btn-regular {
        @apply transition flex items-center justify-center bg-[var(--btn-regular-bg)] hover:bg-[var(--btn-regular-bg-hover)] active:bg-[var(--btn-regular-bg-active)]
        text-[var(--btn-content)] dark:text-white/75
    }

    .link-underline {
        @apply transition underline decoration-2 decoration-dashed decoration-[var(--link-underline)]
        hover:decoration-[var(--link-hover)] active:decoration-[var(--link-active)] underline-offset-[0.25rem]
    }

    .text-90 {
        @apply text-black/90 dark:text-white/90
    }
    .text-75 {
        @apply text-black/75 dark:text-white/75
    }
    .text-50 {
        @apply text-black/50 dark:text-white/50
    }
    .text-30 {
        @apply text-black/30 dark:text-white/30
    }
    .text-25 {
        @apply text-black/25 dark:text-white/25
    }

    html.is-changing .transition-fade {
        @apply transition-all duration-200
    }
    html.is-animating .transition-fade {
        @apply opacity-0 translate-y-4
    }
}

@keyframes fade-in-up {
    0% {
        transform: translateY(2rem);
        opacity: 0;
    }
    100% {
        transform: translateY(0);
        opacity: 1;
    }
}
.onload-animation {
    opacity: 0;
    animation: 300ms fade-in-up;
    animation-fill-mode: forwards;
}
#top-row {
    animation-delay: 0ms
}
#sidebar {
    animation-delay: 100ms
}
#content-wrapper {
    animation-delay: var(--content-delay);
}
#footer {
    animation-delay: 400ms;
}


</style>


<!-- CLICK HEART ❤️ -->

<script is:inline type="text/javascript">
document.addEventListener("DOMContentLoaded", () => {
  const DEFAULT_CONFIG = {
    HEART_COUNT: {
      MOBILE: 3,
      DESKTOP: 6,
    },
    HEART_COLORS: ["#ff9999", "#ffb3ba", "#ffc8dd", "#bae1ff", "#a2d2ff"],
    HEART_SIZE: {
      MIN: 10,
      MAX: 20,
    },
    ANIMATION_DURATION: 1000,
    MAX_HEARTS: 30,
    MOVE_RANGE: {
      X: 100,
      Y: 100,
    },
    EASING: "easeOutQuad",
  };

  function mergeConfig(defaultConfig, externalConfig) {
    const merged = JSON.parse(JSON.stringify(defaultConfig));

    function mergeObjects(target, source) {
      for (const key in source) {
        if (
          typeof source[key] === "object" &&
          source[key] !== null &&
          !Array.isArray(source[key])
        ) {
          if (typeof target[key] !== "object") {
            target[key] = {};
          }
          mergeObjects(target[key], source[key]);
        } else {
          target[key] = source[key];
        }
      }
    }

    if (externalConfig) {
      mergeObjects(merged, externalConfig);
    }

    return merged;
  }

  const CONFIG = mergeConfig(DEFAULT_CONFIG, window.heartConfig);

  addStyles();
  addMetaViewport();

  const heartsContainer = document.createElement("div");
  heartsContainer.style.cssText = `
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      z-index: 9999;
    `;
  document.body.appendChild(heartsContainer);

  document.body.addEventListener("click", (event) => {
    createFirework(event.clientX, event.clientY);
  });

  document.body.addEventListener("touchstart", (event) => {
    const touch = event.touches[0];
    createFirework(touch.clientX, touch.clientY);
  });

  function addStyles() {
    const style = document.createElement("style");
    style.textContent = `
        .heart {
          position: absolute;
          pointer-events: none;
          will-change: transform, opacity;
        }
      `;
    document.head.appendChild(style);
  }

  function addMetaViewport() {
    if (!document.querySelector('meta[name="viewport"]')) {
      const meta = document.createElement("meta");
      meta.name = "viewport";
      meta.content =
        "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no";
      document.head.appendChild(meta);
    }
  }

  function createFirework(x, y) {
    const fragment = document.createDocumentFragment();
    const heartCount =
      window.innerWidth < 768
        ? CONFIG.HEART_COUNT.MOBILE
        : CONFIG.HEART_COUNT.DESKTOP;

    for (let i = 0; i < heartCount; i++) {
      const color = getRandomColor();
      const heart = createHeart(x, y, color);
      fragment.appendChild(heart);
    }

    heartsContainer.appendChild(fragment);
    clearOldHearts();
  }

  function getRandomColor() {
    return CONFIG.HEART_COLORS[
      Math.floor(Math.random() * CONFIG.HEART_COLORS.length)
    ];
  }

  function createHeart(x, y, color) {
    const heart = document.createElementNS("http://www.w3.org/2000/svg", "svg");
    heart.setAttribute("viewBox", "0 0 512 512");
    heart.classList.add("heart");
    heart.style.transform = `translate(${x}px, ${y}px)`;

    const path = document.createElementNS("http://www.w3.org/2000/svg", "path");
    path.setAttribute(
      "d",
      "M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z"
    );
    path.setAttribute("fill", color);

    heart.appendChild(path);

    const size =
      CONFIG.HEART_SIZE.MIN +
      Math.random() * (CONFIG.HEART_SIZE.MAX - CONFIG.HEART_SIZE.MIN);
    heart.style.width = `${size}px`;
    heart.style.height = `${size}px`;

    animateHeart(heart, x, y);

    return heart;
  }

  function animateHeart(heart, initialX, initialY) {
    const startTime = performance.now();
    const targetX = initialX + (Math.random() - 0.5) * CONFIG.MOVE_RANGE.X;
    const targetY = initialY - Math.random() * CONFIG.MOVE_RANGE.Y; // Always move upwards

    function update(currentTime) {
      const elapsed = currentTime - startTime;
      if (elapsed >= CONFIG.ANIMATION_DURATION) {
        heart.remove();
        return;
      }

      const progress = elapsed / CONFIG.ANIMATION_DURATION;
      const easedProgress = easing[CONFIG.EASING](progress);

      const currentX = initialX + (targetX - initialX) * easedProgress;
      const currentY = initialY + (targetY - initialY) * easedProgress;
      const currentOpacity = 1 - easedProgress;

      heart.style.transform = `translate(${currentX}px, ${currentY}px)`;
      heart.style.opacity = currentOpacity;

      requestAnimationFrame(update);
    }

    requestAnimationFrame(update);
  }

  const easing = {
    easeOutQuad: (t) => 1 - (1 - t) * (1 - t),
    easeOutCubic: (t) => 1 - Math.pow(1 - t, 3),
    easeOutQuart: (t) => 1 - Math.pow(1 - t, 4),
    easeOutQuint: (t) => 1 - Math.pow(1 - t, 5),
  };

  function clearOldHearts() {
    const hearts = heartsContainer.getElementsByClassName("heart");
    if (hearts.length > CONFIG.MAX_HEARTS) {
      for (let i = 0; i < hearts.length - CONFIG.MAX_HEARTS; i++) {
        hearts[i].remove();
      }
    }
  }
});
</script>

     <!-- SAKURA EFFECT 😘 -->
   
<script is:inline type="text/javascript">
window.sakuraConfig = {
  "sakura": 90,
  "xSpeed": 1.1,
  "ySpeed": 1.45,
  "rSpeed": 0.1,
  "direction": "TopLeft",
  "zIndex": 90
};
</script>

<script is:inline type="text/javascript" src="/lib/assets/js/sakura-rain/sakura-rain.js" defer></script>

<!-- END -->

    <!-- live2D 😘-->

<script is:inline src="/lib/assets/js/live2d/js/L2Dwidget.0.min.js" type="text/javascript" />

<script is:inline src="/lib/assets/js/live2d/js/L2Dwidget.min.js" type="text/javascript" />

    <script is:inline type="text/javascript">
      L2Dwidget
        .init({
           model: {

           jsonPath: "/lib/assets/js/live2d/model/rem/model.json"},
           
            display: {
                "position": "left",
                "width": 250,
                "height": 400,
                "hOffset": 0,
                "vOffset": -50
            },
           mobile: { 
               show: true,
               scale: 1
           },
           
          dialog: {
            enable: true,
            script: {
              'every idle 10s': '$hitokoto$',
              'hover .star': 'Halloo 😍',
              'tap body': ' Yay Omess 🤬 Otak Mesum ,aku dah ada yang poenya aa thanvank 🤭',
              'tap face': '     Apa sih 🫣 sayank 😘 ！'
            }
          }
        });
    </script>
    
    
    <!-- Telegram 😆 -->

<script is:inline > 
window.intergramId = "6434614160"
window.intergramServer = "https://f047-114-79-6-123.ngrok-free.app"
</script>

 <script is:inline id="intergram" type="text/javascript" src="https://f047-114-79-6-123.ngrok-free.app/js/widget.js"></script>


<!-- Bird Tweet 🐦-->
<script is:inline type="text/javascript" src="/lib/assets/js/burung/burung.js"></script>
<script is:inline type="text/javascript">
var birdSprite="/lib/assets/js/burung/images/cyan bird.png";
var targetElems=new Array("img","hr","table","td","div","input","textarea","button","select","ul","ol","li","h1","h2","h3",
"h4","p","code","object","a","b","strong","span");
var twitterAccount = "#";
var tweetThisText = "Fuwari 😁";
tripleflapInit()
</script>
<!-- END -->

 
